swagger: "2.0"
info:
  description: "This API was developed for Banco Inter for the practical challenge"
  version: "1.0.0"
  title: "Swagger Inter"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
tags:
  - name: "calculate"
    description: "Access API REST"
  - name: "user"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /calculate:
    post:
      tags:
        - "calculate"
      summary: "calculate"
      description: "calculate digit root"
      operationId: "calculate"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "SingleDigit"
          required: true
          schema:
            $ref: "#/definitions/SingleDigitRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SingleDigit"
  /user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/UserRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateUserResponse"
  /user/{id}:
    get:
      tags:
        - "user"
      summary: "Get user by user id"
      description: ""
      operationId: "getUserByName"
      produces:
        - "application/json"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "Private key"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
      security:
        - api_key: []
    put:
      tags:
        - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user. Authorization to send headers with the Authorization vest filled with Publickey"
      operationId: "updateUser"
      produces:
        - "application/json"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "Public key"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "name that need to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
      security:
        - api_key: []
    delete:
      tags:
        - "user"
      summary: "Delete user"
      description: "Delete user."
      operationId: "delete"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The name that needs to be deleted"
          required: true
          type: "string"
      responses:
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
  /user/{id}/calculate:
    post:
      tags:
        - "user"
      summary: "calculate digit root"
      description: "calculate digit root by user id"
      operationId: "calculatebyUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "SingleDigit"
          required: true
          schema:
            $ref: "#/definitions/SingleDigitRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SingleDigit"
  /user/{id}/calculations:
    get:
      tags:
        - "user"
      summary: "calculate digit root"
      description: "calculate digit root by user id"
      operationId: "calculationsbyUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Calculations"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  CreateUserResponse:
    type: "object"
    properties:
      id:
        type: "string"
      privateKey:
        type: "string"
      publicKey:
        type: "string"
  SingleDigit:
    type: "object"
    properties:
      input:
        type: "integer"
        format: "int64"
      base:
        type: "integer"
        format: "int64"
      digit:
        type: "integer"
        format: "int64"
    xml:
      name: "User"
  SingleDigitRequest:
    type: "object"
    properties:
      input:
        type: "integer"
        format: "int64"
      base:
        type: "integer"
        format: "int64"
  Calculations:
    type: "array"
    items:
      $ref: "#/definitions/SingleDigit"
  UserRequest:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
      calculations:
        type: "array"
        items:
          $ref: "#/definitions/SingleDigit"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"